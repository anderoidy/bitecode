{"ast":null,"code":"import { InjectionToken, inject, EventEmitter, ɵɵdefineInjectable, ɵɵinject, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n  constructor(_document) {\n    /** The current 'ltr' or 'rtl' value. */\n    this.value = 'ltr';\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n    this.change = new EventEmitter();\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      const value = bodyDir || htmlDir;\n      this.value = value === 'ltr' || value === 'rtl' ? value : 'ltr';\n    }\n  }\n  ngOnDestroy() {\n    this.change.complete();\n  }\n}\nDirectionality.ɵprov = ɵɵdefineInjectable({\n  factory: function Directionality_Factory() {\n    return new Directionality(ɵɵinject(DIR_DOCUMENT, 8));\n  },\n  token: Directionality,\n  providedIn: \"root\"\n});\nDirectionality.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\nDirectionality.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [DIR_DOCUMENT]\n  }]\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n  constructor() {\n    /** Normalized direction that accounts for invalid/unsupported values. */\n    this._dir = 'ltr';\n    /** Whether the `value` has been set to its initial value. */\n    this._isInitialized = false;\n    /** Event emitted when the direction changes. */\n    this.change = new EventEmitter();\n  }\n  /** @docs-private */\n  get dir() {\n    return this._dir;\n  }\n  set dir(value) {\n    const old = this._dir;\n    const normalizedValue = value ? value.toLowerCase() : value;\n    this._rawDir = value;\n    this._dir = normalizedValue === 'ltr' || normalizedValue === 'rtl' ? normalizedValue : 'ltr';\n    if (old !== this._dir && this._isInitialized) {\n      this.change.emit(this._dir);\n    }\n  }\n  /** Current layout direction of the element. */\n  get value() {\n    return this.dir;\n  }\n  /** Initialize once default value has been set. */\n  ngAfterContentInit() {\n    this._isInitialized = true;\n  }\n  ngOnDestroy() {\n    this.change.complete();\n  }\n}\nDir.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[dir]',\n    providers: [{\n      provide: Directionality,\n      useExisting: Dir\n    }],\n    host: {\n      '[attr.dir]': '_rawDir'\n    },\n    exportAs: 'dir'\n  }]\n}];\nDir.propDecorators = {\n  change: [{\n    type: Output,\n    args: ['dirChange']\n  }],\n  dir: [{\n    type: Input\n  }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {}\nBidiModule.decorators = [{\n  type: NgModule,\n  args: [{\n    exports: [Dir],\n    declarations: [Dir]\n  }]\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };","map":{"version":3,"names":["InjectionToken","inject","EventEmitter","ɵɵdefineInjectable","ɵɵinject","Injectable","Optional","Inject","Directive","Output","Input","NgModule","DOCUMENT","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","Directionality","constructor","_document","value","change","bodyDir","body","dir","htmlDir","documentElement","ngOnDestroy","complete","ɵprov","Directionality_Factory","token","decorators","type","args","ctorParameters","undefined","Dir","_dir","_isInitialized","old","normalizedValue","toLowerCase","_rawDir","emit","ngAfterContentInit","selector","providers","provide","useExisting","host","exportAs","propDecorators","BidiModule","exports","declarations","ɵangular_material_src_cdk_bidi_bidi_a"],"sources":["C:/Users/ander/Documents/Projetos/bitecode-app/node_modules/@angular/cdk/fesm2015/bidi.js"],"sourcesContent":["import { InjectionToken, inject, EventEmitter, ɵɵdefineInjectable, ɵɵinject, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵprov = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\nDirectionality.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() { return this._dir; }\n    set dir(value) {\n        const old = this._dir;\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() { return this.dir; }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.decorators = [\n    { type: Directive, args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir',\n            },] }\n];\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [Dir],\n                declarations: [Dir],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}